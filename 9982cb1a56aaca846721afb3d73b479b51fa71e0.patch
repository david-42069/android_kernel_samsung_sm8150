From 9982cb1a56aaca846721afb3d73b479b51fa71e0 Mon Sep 17 00:00:00 2001
From: Jesse Chan <jc@linux.com>
Date: Wed, 25 Mar 2020 18:46:19 +0000
Subject: [PATCH] HACK: scripts: Makefile: disable size_append

techpack/audio is somehow triggering size_append
which is time-consuming, resource-hungry
and utterly meaningless during incremental builds.

Likely there are BUGs in Kbuild but so far I have
not been able to find them.

As we are not using size_append for this kernel,
let's just disable size_append before a proper
solution can be found.

Signed-off-by: Jesse Chan <jc@linux.com>
---
 scripts/Makefile.lib | 15 +--------------
 1 file changed, 1 insertion(+), 14 deletions(-)

diff --git a/scripts/Makefile.lib b/scripts/Makefile.lib
index ba3abfa91ba4..a2bbd3f33df9 100644
--- a/scripts/Makefile.lib
+++ b/scripts/Makefile.lib
@@ -314,20 +314,7 @@ cmd_cat = (cat $(filter-out FORCE,$^) > $@) || (rm -f $@; false)
 
 # Bzip2 and LZMA do not include size in file... so we have to fake that;
 # append the size as a 32-bit littleendian number as gzip does.
-size_append = printf $(shell						\
-dec_size=0;								\
-for F in $1; do								\
-	fsize=$$($(CONFIG_SHELL) $(srctree)/scripts/file-size.sh $$F);	\
-	dec_size=$$(expr $$dec_size + $$fsize);				\
-done;									\
-printf "%08x\n" $$dec_size |						\
-	sed 's/\(..\)/\1 /g' | {					\
-		read ch0 ch1 ch2 ch3;					\
-		for ch in $$ch3 $$ch2 $$ch1 $$ch0; do			\
-			printf '%s%03o' '\\' $$((0x$$ch)); 		\
-		done;							\
-	}								\
-)
+size_append = true
 
 quiet_cmd_bzip2 = BZIP2   $@
 cmd_bzip2 = (cat $(filter-out FORCE,$^) | \
